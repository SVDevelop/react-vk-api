{"ast":null,"code":"import _regeneratorRuntime from \"/home/serg/Documents/react/react-vk-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/serg/Documents/react/react-vk-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/serg/Documents/react/react-vk-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/serg/Documents/react/react-vk-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useVK } from \"./../VK\";\nexport default function useQuery(_ref) {\n  _s();\n\n  var method = _ref.method,\n      params = _ref.params;\n\n  var _useVK = useVK(),\n      call = _useVK.call;\n\n  var _useState = useState({\n    response: {\n      count: 0,\n      items: []\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var func = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      var _yield$call, res, count, items;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return call(method, _objectSpread({}, params));\n\n            case 2:\n              _yield$call = _context.sent;\n              res = _yield$call.res;\n              count = res.count, items = res.items;\n              count && setResponse(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  response: _objectSpread(_objectSpread({}, prev.response), {}, {\n                    count: count,\n                    items: items\n                  })\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [call]);\n  return func;\n}\n\n_s(useQuery, \"5v3KIXSpkqejk2l4VDo+pFTw9Ak=\", false, function () {\n  return [useVK];\n});\n\nuseQuery.PropTypes = {\n  method: PropTypes.string.isRequired,\n  params: PropTypes.object\n};\nuseQuery.defaultProps = {\n  method: \"\",\n  params: {}\n}; //  const wallGet = useCallback(\n//   async (id) => {\n//     const { response } = await call(\"wall.get\", { owner_id: `-${id}` });\n//     const { count, items } = response;\n//     count &&\n//       setWallState((prevState) => ({\n//         ...prevState,\n//         groups: {\n//           ...groupsState.groups,\n//           count,\n//           chunk: items\n//         }\n//       }));\n//   },\n//   [call]\n// );","map":{"version":3,"sources":["/home/serg/Documents/react/react-vk-api/src/hooks/useQuery.js"],"names":["useState","useCallback","PropTypes","useVK","useQuery","method","params","call","response","count","items","setResponse","func","value","res","prev","string","isRequired","object","defaultProps"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,eAAe,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AACnD,eAAiBH,KAAK,EAAtB;AAAA,MAAQI,IAAR,UAAQA,IAAR;;AACA,kBAAgCP,QAAQ,CAAC;AACvCQ,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,CADC;AAERC,MAAAA,KAAK,EAAE;AAFC;AAD6B,GAAD,CAAxC;AAAA;AAAA,MAAOF,QAAP;AAAA,MAAiBG,WAAjB;;AAMA,MAAMC,IAAI,GAAGX,WAAW;AAAA,yEACtB,iBAAOY,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACwBN,IAAI,CAACF,MAAD,oBAAcC,MAAd,EAD5B;;AAAA;AAAA;AACUQ,cAAAA,GADV,eACUA,GADV;AAEUL,cAAAA,KAFV,GAE2BK,GAF3B,CAEUL,KAFV,EAEiBC,KAFjB,GAE2BI,GAF3B,CAEiBJ,KAFjB;AAIED,cAAAA,KAAK,IACHE,WAAW,CAAC,UAACI,IAAD;AAAA,uDACPA,IADO;AAEVP,kBAAAA,QAAQ,kCAAOO,IAAI,CAACP,QAAZ;AAAsBC,oBAAAA,KAAK,EAALA,KAAtB;AAA6BC,oBAAAA,KAAK,EAALA;AAA7B;AAFE;AAAA,eAAD,CADb;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADsB;;AAAA;AAAA;AAAA;AAAA,OAWtB,CAACH,IAAD,CAXsB,CAAxB;AAcA,SAAOK,IAAP;AACD;;GAvBuBR,Q;UACLD,K;;;AAwBnBC,QAAQ,CAACF,SAAT,GAAqB;AACnBG,EAAAA,MAAM,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UADN;AAEnBX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB;AAFC,CAArB;AAKAd,QAAQ,CAACe,YAAT,GAAwB;AACtBd,EAAAA,MAAM,EAAE,EADc;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAxB,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useVK } from \"./../VK\";\n\nexport default function useQuery({ method, params }) {\n  const { call } = useVK();\n  const [response, setResponse] = useState({\n    response: {\n      count: 0,\n      items: []\n    }\n  });\n  const func = useCallback(\n    async (value) => {\n      const { res } = await call(method, { ...params });\n      const { count, items } = res;\n\n      count &&\n        setResponse((prev) => ({\n          ...prev,\n          response: { ...prev.response, count, items }\n        }));\n    },\n    [call]\n  );\n\n  return func;\n}\n\nuseQuery.PropTypes = {\n  method: PropTypes.string.isRequired,\n  params: PropTypes.object\n};\n\nuseQuery.defaultProps = {\n  method: \"\",\n  params: {}\n};\n//  const wallGet = useCallback(\n//   async (id) => {\n//     const { response } = await call(\"wall.get\", { owner_id: `-${id}` });\n//     const { count, items } = response;\n\n//     count &&\n//       setWallState((prevState) => ({\n//         ...prevState,\n//         groups: {\n//           ...groupsState.groups,\n//           count,\n//           chunk: items\n//         }\n//       }));\n//   },\n//   [call]\n// );\n"]},"metadata":{},"sourceType":"module"}